{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "DeploymentEnvironment":{
            "type": "string",
            "allowedValues": [
                "development",
                "production"
            ],

            "metadata": {
                "description": "Defines development/production environment for parameters"
            }      
        },

        "StorageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Premium_ZRS"
            ]   
        },
  
        "ResourceLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "southindia",
                "centralindia",
                "westindia",
                "canadacentral",
                "canadaeast",
                "uksouth",
                "ukwest",
                "westcentralus",
                "westus2",
                "koreacentral",
                "koreasouth",
                "francecentral",
                "francesouth",
                "australiacentral",
                "australiacentral2"
            ],

            "metadata": {
                "description": "Location from where each resource will be deployed"
            }
        },

        "SQLDataBaseLevel": {
            "type": "string",
            "allowedvalues": [
                "Basic",
                "Premium"
            ],
            "metadata": {
                "description": "Desired performance for database"
            }
        },

        "SQLDataBaseLimit": {
            "type": "int",
            "allowedValues": [
                1000000000,
                10000000,
                100000
            ]
        }
    },

    "variables": {

        "DeploymentNumber": "80",
        "UniqueString": "ogaitnas",
        
        "DeploymentIdentifierDevelopment": "[concat (variables('UniqueString'), variables('DeploymentNumber'), 'd')]",
        "DeploymentIdentifierProduction": "[concat (variables('UniqueString'), variables('DeploymentNumber'), 'p')]",

        "DeploymentIdentifier": "[if(equals(parameters('DeploymentEnvironment'),'development'), variables('DeploymentIdentifierDevelopment'), variables('DeploymentIdentifierProduction'))]",

        "PublicIPAddressName": "[concat ('ipaddress', variables('DeploymentIdentifier'))]",

        "DNSLabel": "[concat ('dns', variables('DeploymentIdentifier'))]",

        "StorageAccountName": "[concat ('stg', variables('DeploymentIdentifier'))]",

        "VirtualNetworkName": "[concat ('vnet', variables('DeploymentIdentifier'))]",
       
        "SubnetZZName": "snet",

        "Subnet01Name": "[concat (variables('SubnetZZName'), 'a', variables('DeploymentIdentifier'))]", 
        "Subnet02Name": "[concat (variables('SubnetZZName'), 'b', variables('DeploymentIdentifier'))]", 

        "SQLServerName": "[concat ('sqlsrv', variables('DeploymentIdentifier'))]",

        "SQLDataBaseName": "[concat ('sqldb', variables('DeploymentIdentifier'))]"
    },

    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",

            "apiVersion": "2015-06-15",
            "name": "[variables('PublicIPAddressName')]",
            "location": "[parameters('ResourceLocation')]",

            "tags": {
                "displayName": "[variables('PublicIPAddressName')]",
                "environment": "[parameters('DeploymentEnvironment')]"
            },

            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('DNSLabel')]"
                }
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "name": "[variables('StorageAccountName')]",
            "location": "[parameters('ResourceLocation')]",

            "tags": {
                "displayName": "[variables('StorageAccountName')]",
                "environment": "[parameters('DeploymentEnvironment')]"
            },

            "properties": {
                "accountType": "[parameters('StorageAccountType')]"
            }
        },

        {
            "type": "Microsoft.Network/virtualNetworks",

            "apiVersion": "2015-06-15",
            "name": "[variables('VirtualNetworkName')]",
            "location": "[parameters('ResourceLocation')]",
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]",
                "environment": "[parameters('DeploymentEnvironment')]"
            },

            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },

                "subnets": [
                    {
                        "name": "[variables('Subnet01Name')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    },
                    {
                        "name": "[variables('Subnet02Name')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Sql/servers",

            "apiVersion": "2014-04-01-preview",
            "name": "[variables('SQLServerName')]",
            "location": "[parameters('ResourceLocation')]",

            "tags": {
                "displayName": "[variables('SQLServerName')]",
                "environment": "[parameters('DeploymentEnvironment')]"
                
            },

            "properties": {
                "administratorLogin": "newLoginUser",
                "administratorLoginPassword": "newLoginPa$$word"
            },

            "resources": [
                {
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat ('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ],
                    "location": "[parameters('ResourceLocation')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                }
            ]
        },

        {
            "type": "Microsoft.Sql/servers/databases",

            "apiVersion": "2014-04-01-preview",
            "name": "[concat (variables('SQLServerName'), '/', variables('SQLDataBaseName'))]",
            "location": "[parameters('ResourceLocation')]",

            "tags": {
                "displayName": "[variables('SQLDataBaseName')]",
                "environment": "[parameters('DeploymentEnvironment')]"
            },

            "dependsOn": [
                "[variables('SQLServerName')]"
            ],

            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "edition": "[parameters('SQLDataBaseLevel')]",
                "maxSizeBytes": "[parameters('SQLDataBaseLimit')]",
                "requestedServiceObjectiveName": "Basic"
            }
        }
    ],

    "outputs": {}
}